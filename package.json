{
  "version": "1.0.0",
  "name": "timelify",
  "description": "A lightweight and flexible task scheduling library for JavaScript & TypeScript. Easily manage interval-based and one-time tasks with precise execution control.",
  "type": "module",
  "files": [
    "dist"
  ],
  "main": "./dist/timelify.cjs",
  "module": "./dist/timelify.js",
  "types": "./dist/timelify.d.ts",
  "exports": {
    ".": {
      "import": "./dist/timelify.js",
      "require": "./dist/timelify.cjs"
    }
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/erfanezk/timelify.git"
  },
  "author": {
    "name": "Erfan Ezkat",
    "url": "https://github.com/erfanezk",
    "email": "erfan.ezkat@gmail.com"
  },
  "keywords": [
    "task",
    "task-runner",
    "timelify",
    "schedule",
    "automation",
    "job-scheduler",
    "timed-execution",
    "recurring-tasks",
    "background-tasks",
    "setInterval",
    "setTimeout"
  ],
  "scripts": {
    "lint": "eslint . --ext .ts",
    "test": "jest --passWithNoTests",
    "test:watch": "jest --watch",
    "lint:fix": "eslint . --ext .ts --fix",
    "build": "rm -fr dist && tsc && vite build"
  },
  "devDependencies": {
    "@commitlint/cli": "^19.7.1",
    "@commitlint/config-conventional": "^19.7.1",
    "@eslint/js": "^9.19.0",
    "@jest/transform": "^29.7.0",
    "@types/jest": "^29.5.14",
    "@typescript-eslint/eslint-plugin": "^8.23.0",
    "@typescript-eslint/parser": "^8.23.0",
    "eslint": "^9.19.0",
    "eslint-config-prettier": "^10.0.1",
    "eslint-plugin-prettier": "^5.2.3",
    "eslint-plugin-promise": "^7.2.1",
    "husky": "^9.1.7",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "neostandard": "^0.12.1",
    "prettier": "^3.4.2",
    "pretty-quick": "^4.0.0",
    "ts-jest": "^29.2.5",
    "ts-node": "^10.9.2",
    "typescript": "^5.7.3",
    "typescript-eslint": "^8.23.0",
    "vite": "^5.4.1",
    "vite-plugin-dts": "^4.2.4",
    "vitepress": "^1.5.0",
    "vitest": "^2.1.3"
  },
  "dependencies": {
    "uuid": "^11.0.5"
  }
}
